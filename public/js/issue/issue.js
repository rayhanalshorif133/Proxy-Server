/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/issue/issue.js":
/*!*************************************!*\
  !*** ./resources/js/issue/issue.js ***!
  \*************************************/
/***/ (() => {

eval("var id = 0;\nvar tr = \"\";\nvar departmentIDs = \"\";\nvar departments = \"\";\nvar issueSelected = \"\";\n$(document).ready(function () {\n  radioBtnHandler();\n  editBtnIssue();\n  issueDeleteBtn();\n  multiIssueDeleteBtn();\n});\n\nfunction radioBtnHandler() {\n  $(\".radioBtn\").click(function () {\n    $(\".radioBtn\").removeClass(\"active\");\n    $(this).addClass(\"active\");\n    $(this).parent().find('input[type=\"radio\"]').prop(\"checked\", true);\n  });\n}\n\nfunction editBtnIssue() {\n  $(document).on(\"click\", \".editIssue\", function () {\n    id = $(this).attr(\"id\").split(\"-\")[1]; // Set Value\n\n    $(\"#issue_id\").val(id);\n    axios.get(\"/issue/\".concat(id, \"/fetch\")).then(function (response) {\n      var issue = response.data.data;\n      $(\"#edit_title\").val(issue.title);\n      $(\"#editDescription\").val(issue.description);\n      $(\".radioBtn\").each(function () {\n        if ($(this).parent().find('input[type=\"radio\"]').val() == issue.seriousness) {\n          $(this).addClass(\"active\");\n          $(this).parent().find('input[type=\"radio\"]').prop(\"checked\", true);\n        }\n      });\n      $(\"#editRecommendation\").val(issue.recommendation);\n      handleDepartmentByTomSelect(issue);\n    });\n  });\n}\n\nfunction handleDepartmentByTomSelect(issue) {\n  $(\".appendDepartmentSelect\").html(\"\\n            <select class=\\\"\\\" name=\\\"department_id[]\\\" id=\\\"edit_department_id\\\" multiple>\\n            </select>\\n            \");\n  departmentIDs = new TomSelect(\"#edit_department_id\", {\n    create: false,\n    sortField: {\n      field: \"text\",\n      direction: \"asc\"\n    },\n    plugins: {\n      clear_button: {\n        title: \"Remove all selected options\"\n      }\n    }\n  });\n  axios.get(\"/department/fetch-all\").then(function (response) {\n    departments = response.data.data;\n    departments.forEach(function (department) {\n      departmentIDs.addOption({\n        value: department.id,\n        text: department.name\n      });\n    });\n    issue.departments.forEach(function (department) {\n      departmentIDs.addItem(department.id);\n    });\n  });\n  departmentIDs.clear();\n  issue.departments.forEach(function (department) {\n    departmentIDs.addItem(department.id);\n  });\n  $(\".ts-control\").click(function () {\n    id = $(\".active\").attr(\"data-value\");\n    userIdSelect.removeItem(id);\n  });\n}\n\nfunction issueDeleteBtn() {\n  $(document).on(\"click\", \".issueDeleteBtn\", function () {\n    id = $(this).attr(\"id\").split(\"-\")[1];\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you will not be able to recover this data!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true\n    }).then(function (willDelete) {\n      if (willDelete) {\n        swal(\"Done! Your data has been deleted\", {\n          icon: \"success\"\n        });\n        axios[\"delete\"](\"/issue/\".concat(id, \"/delete\")).then(function (response) {\n          location.reload();\n        });\n      } else {\n        swal(\"Your data is now deleted\", {\n          icon: \"error\"\n        });\n      }\n    });\n  });\n}\n\nfunction multiIssueDeleteBtn() {\n  $(document).on(\"click\", \".issueApplyBtn\", function () {\n    issueSelected = $(\".issueActionSelect\").val();\n\n    if (issueSelected == \"delete\") {\n      var issueIds = [];\n      $(\".checkedIssue\").each(function () {\n        if ($(this).is(\":checked\")) {\n          issueIds.push($(this).attr(\"data-issueId\"));\n        }\n      });\n      swal({\n        title: \"Are you sure?\",\n        text: \"Once deleted, you will not be able to recover this data!\",\n        icon: \"warning\",\n        buttons: true,\n        dangerMode: true\n      }).then(function (willDelete) {\n        if (willDelete) {\n          swal(\"Done! Your data has been deleted\", {\n            icon: \"success\"\n          });\n          axios.post(\"/issue/multi-delete\", {\n            ids: issueIds\n          }).then(function (response) {\n            location.reload();\n          });\n        } else {\n          swal(\"Your data is now deleted\", {\n            icon: \"error\"\n          });\n        }\n      });\n    } else {\n      toastr.error(\"Please select action\");\n    }\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/issue/issue.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/issue/issue.js"]();
/******/ 	
/******/ })()
;