/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/shift_engineer/create.js":
/*!***********************************************!*\
  !*** ./resources/js/shift_engineer/create.js ***!
  \***********************************************/
/***/ (() => {

eval("var assignUsers = \"\";\nvar table = \"\";\nvar users = \"\";\nvar monthAndYear = \"\";\nvar assignUsersText = [];\nvar sixAMToTwoPM = \"\";\nvar twoPMToTenPM = \"\";\nvar tenPMToSixAM = \"\";\n$(document).ready(function () {\n  handleDatepicker();\n  assignUser();\n  handleCreateBtn();\n  table = $(\"#shiftEngineerCreateTableId\").DataTable({\n    responsive: true,\n    paging: false,\n    ordering: false\n  });\n  handleSubmitBtn();\n});\n\nfunction handleDatepicker() {\n  var dp = $(\"#datepicker\").datepicker({\n    format: \"mm-yyyy\",\n    startView: \"months\",\n    minViewMode: \"months\"\n  });\n  $(\".datepicker\").addClass(\"bg-1000\");\n}\n\nfunction assignUser() {\n  assignUsers = new TomSelect(\"#assignUser\", {\n    create: false,\n    maxItems: 3,\n    sortField: {\n      field: \"text\",\n      direction: \"asc\"\n    },\n    plugins: {\n      clear_button: {\n        title: \"Remove all selected options\"\n      }\n    }\n  });\n  $(\"#assignUser\").on(\"change\", function () {\n    if (assignUsers.getValue().length > 0) {\n      $(\"#createBtn\").attr(\"disabled\", false);\n    } else {\n      $(\"#createBtn\").attr(\"disabled\", true);\n    }\n  });\n}\n\nfunction handleCreateBtn() {\n  $(\"#createBtn\").on(\"click\", function () {\n    var assignUser = assignUsers.getValue();\n\n    if (!$(\"#datepicker\").val()) {\n      toastr.info(\"Please choose a month first...!!!\");\n      return false;\n    }\n\n    axios.post(\"/shift-engineer/fetch/user-name\", {\n      assignUsers: assignUser\n    }).then(function (response) {\n      users = response.data.data;\n      var html = \"\";\n\n      for (var index = 0; index < users.length; index++) {\n        var element = users[index];\n        html += \"<span id=\\\"\".concat(element.id, \"\\\">\").concat(index + 1, \" . \").concat(element.name, \" <br></span>\");\n      }\n\n      $(\".assignUserAppend\").text(\"\");\n      $(\".assignUserAppend\").append(html);\n\n      if (users.length < 3) {\n        $(\".noAssignUser\").removeClass(\"d-none\");\n      } else {\n        $(\".noAssignUser\").addClass(\"d-none\");\n      }\n    });\n    handleMonthShiftTable();\n  });\n}\n\nfunction handleMonthShiftTable() {\n  monthAndYear = $(\"#datepicker\").val();\n  var month = monthAndYear.split(\"-\")[0];\n  var monthName = getMonthName(month);\n  var year = monthAndYear.split(\"-\")[1];\n  var daysInMonth = new Date(year, month, 0).getDate();\n  var assingUserLenght = assignUsers.getValue().length;\n  table.clear().draw();\n\n  for (var index = 0; index < daysInMonth; index++) {\n    sixAMToTwoPM = getSixAMToTwoPM(index + 1, assingUserLenght);\n    twoPMToTenPM = getTwoPMToTenPM(index + 1, assingUserLenght);\n    tenPMToSixAM = getTenPMToSixAM(index + 1, assingUserLenght);\n    table.row.add([\"<span class=\\\"align-middle\\\">\".concat(index + 1, \"-\").concat(monthName, \"-\").concat(year, \"</span>\"), \"<span class=\\\"align-middle sixAMToTwoPM\\\">\".concat(sixAMToTwoPM, \"</span>\"), \"<span class=\\\"align-middle twoPMToTenPM\\\">\".concat(twoPMToTenPM, \"</span>\"), \"<span class=\\\"align-middle tenPMToSixAM\\\">\".concat(tenPMToSixAM, \"</span>\"), \"<span class=\\\"align-middle\\\" id=\\\"\".concat(index + 1, \"\\\">\\n            <span class=\\\"btn btn-outline-info btn-sm editBtn\\\">\\n              <span class=\\\"fas fa-edit\\\"></span>\\n            </span>\\n            <span class=\\\"btn btn-outline-success btn-sm checkBtn d-none\\\">\\n              <span class=\\\"fas fa-check\\\"></span>\\n            </span>\\n            </span>\")]).draw();\n  }\n\n  editBtn();\n  checkBtn();\n}\n\nfunction editBtn() {\n  $(document).on(\"click\", \".editBtn\", function () {\n    $(this).addClass(\"d-none\");\n    $(this).next().removeClass(\"d-none\");\n    sixAMToTwoPM = $(this).closest(\"tr\").find(\"td:eq(1)\");\n    twoPMToTenPM = $(this).closest(\"tr\").find(\"td:eq(2)\");\n    tenPMToSixAM = $(this).closest(\"tr\").find(\"td:eq(3)\");\n    sixAMToTwoPM.html(getDropdown(sixAMToTwoPM.text()));\n    twoPMToTenPM.html(getDropdown(twoPMToTenPM.text()));\n    tenPMToSixAM.html(getDropdown(tenPMToSixAM.text()));\n  });\n}\n\nfunction getDropdown(text) {\n  var length = assignUsers.getValue().length;\n  var dropdown = \"<select class=\\\"form-select\\\" placeholder=\\\"Select one\\\">\";\n\n  if (length < 3) {\n    if (text == 0) {\n      dropdown += \"<option value=\\\"0\\\" selected>0</option>\";\n    } else {\n      dropdown += \"<option value=\\\"0\\\">0</option>\";\n    }\n  }\n\n  var html = \"\";\n\n  for (var index = 0; index < length; index++) {\n    if (text == index + 1) {\n      html += \"<option value=\\\"\".concat(index + 1, \"\\\" selected>\").concat(index + 1, \"</option>\");\n    } else {\n      html += \"<option value=\\\"\".concat(index + 1, \"\\\">\").concat(index + 1, \"</option>\");\n    }\n  }\n\n  dropdown += html;\n  dropdown += \"</select>\";\n  return dropdown;\n}\n\nfunction checkBtn() {\n  $(document).on(\"click\", \".checkBtn\", function () {\n    $(this).addClass(\"d-none\");\n    $(this).prev().removeClass(\"d-none\");\n    sixAMToTwoPM = $(this).closest(\"tr\").find(\"td:eq(1)\");\n    twoPMToTenPM = $(this).closest(\"tr\").find(\"td:eq(2)\");\n    tenPMToSixAM = $(this).closest(\"tr\").find(\"td:eq(3)\");\n    sixAMToTwoPM.html(sixAMToTwoPM.find(\"select\").val());\n    twoPMToTenPM.html(twoPMToTenPM.find(\"select\").val());\n    tenPMToSixAM.html(tenPMToSixAM.find(\"select\").val());\n    toastr.success(\"Shift updated successfully...!!!\");\n  });\n}\n\nfunction getMonthName(month) {\n  var monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n  return monthNames[month - 1];\n}\n\nfunction getSixAMToTwoPM(index, length) {\n  if (index < 8) {\n    return \"1\";\n  } else if (index < 15) {\n    if (length == 1 || length == 2) {\n      return \"0\";\n    } else {\n      return \"3\";\n    }\n  } else if (index < 22) {\n    if (length == 1) {\n      return \"0\";\n    } else {\n      return \"2\";\n    }\n  } else if (index < 29) {\n    return \"1\";\n  } else {\n    if (length == 1 || length == 2) {\n      return \"0\";\n    } else {\n      return \"3\";\n    }\n  }\n}\n\nfunction getTwoPMToTenPM(index, length) {\n  if (index < 8) {\n    if (length == 1) {\n      return \"0\";\n    } else {\n      return \"2\";\n    }\n  } else if (index < 15) {\n    return \"1\";\n  } else if (index < 22) {\n    if (length == 1 || length == 2) {\n      return \"0\";\n    } else {\n      return \"3\";\n    }\n  } else if (index < 29) {\n    if (length == 1) {\n      return \"0\";\n    } else {\n      return \"2\";\n    }\n  } else {\n    return \"1\";\n  }\n}\n\nfunction getTenPMToSixAM(index, length) {\n  if (index < 8) {\n    if (length == 1 || length == 2) {\n      return \"0\";\n    } else {\n      return \"3\";\n    }\n  } else if (index < 15) {\n    if (length == 1) {\n      return \"0\";\n    } else {\n      return \"2\";\n    }\n  } else if (index < 22) {\n    return \"1\";\n  } else if (index < 29) {\n    if (length == 1 || length == 2) {\n      return \"0\";\n    } else {\n      return \"3\";\n    }\n  } else {\n    if (length == 1) {\n      return \"0\";\n    } else {\n      return \"2\";\n    }\n  }\n}\n\nfunction handleSubmitBtn() {\n  $(document).on(\"click\", \".submitBtn\", function () {\n    var data = [];\n    var shiftName = $(\"#shiftName\").val();\n\n    if (!shiftName) {\n      toastr.warning(\"Please enter a shift name...!!!\");\n      return false;\n    }\n\n    var length = assignUsers.getValue().length;\n\n    if (length == 0) {\n      toastr.warning(\"Please select atleast one user...!!!\");\n      return false;\n    }\n\n    assignUsersText = [];\n    $(\".assignUserAppend span\").each(function () {\n      var id = $(this).attr(\"id\");\n      var name = $(this).text();\n      name = name.split(\".\");\n      assignUsersText.push({\n        assign_user_ids: name[0],\n        user_id: id\n      });\n    });\n    $(\".shiftEngineerCreateTableBody\").find(\"tr\").each(function () {\n      var filterData = {};\n      filterData[\"date\"] = $(this).find(\"td:eq(0)\").text();\n      filterData[\"sixAMToTwoPM\"] = getUserId($(this).find(\"td:eq(1)\").text());\n      filterData[\"twoPMToTenPM\"] = getUserId($(this).find(\"td:eq(2)\").text());\n      filterData[\"tenPMToSixAM\"] = getUserId($(this).find(\"td:eq(3)\").text());\n      data.push(filterData);\n    }); // date format monthAndYear\n\n    var date = monthAndYear.split(\"-\");\n    monthAndYear = date[1] + \"-\" + date[0];\n    var shiftInfo = {\n      shiftName: shiftName,\n      yearMonth: monthAndYear,\n      user_ids: assignUsers.getValue(),\n      assignUsers: assignUsersText,\n      shiftInfoDetails: data\n    };\n    axios.post(\"/shift-engineer/store\", shiftInfo).then(function (response) {\n      if (response.data.status == true) {\n        toastr.success(response.data.message);\n        setTimeout(function () {\n          window.location.href = \"/shift-engineer/index\";\n        }, 1000);\n      } else {\n        toastr.error(response.data.message);\n      }\n    });\n  });\n}\n\nfunction getUserId(text) {\n  var returnId = -1;\n  text = parseInt(text);\n\n  if (text == 0) {\n    returnId = 0;\n  }\n\n  $(\".assignUserAppend span\").each(function () {\n    var name = $(this).text();\n    var id = $(this).attr(\"id\");\n    name = name.split(\".\");\n\n    if (parseInt(name[0]) == text) {\n      returnId = id;\n    }\n  });\n  return parseInt(returnId);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/shift_engineer/create.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/shift_engineer/create.js"]();
/******/ 	
/******/ })()
;