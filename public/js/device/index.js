/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/device/index.js":
/*!**************************************!*\
  !*** ./resources/js/device/index.js ***!
  \**************************************/
/***/ (() => {

eval("var id = \"\";\nvar tr = \"\";\nvar selectedDevice = \"\";\nvar selectedAction = \"\";\nvar deviceIDs = [];\nvar table = \"\";\n$(document).ready(function () {\n  deviceDeleteBtn();\n  multiSelectDevice();\n  handleSelectedDevice();\n});\n\nfunction handleSelectedDevice() {\n  table = $(\"#deviceListTableId\").DataTable();\n  $(document).on(\"change\", \".checkAll\", function () {\n    deviceIDs = [];\n    table.rows().data().each(function (value, index) {\n      if ($(\".checkAll\").is(\":checked\")) {\n        deviceIDs.push($(value[0]).find(\"input\").attr(\"data-device-selected-id\"));\n      } else {\n        deviceIDs = [];\n      }\n    });\n  });\n  $(document).on(\"change\", \".selectedDevice\", function () {\n    var thisDeviceID = $(this).attr(\"data-device-selected-id\");\n\n    if ($(this).is(\":checked\")) {\n      deviceIDs.push(thisDeviceID);\n    } else {\n      deviceIDs.map(function (value, index, arr) {\n        if (thisDeviceID == value) {\n          var index = deviceIDs.indexOf(value);\n          deviceIDs.splice(index, 1);\n        }\n      });\n    }\n  });\n}\n\nfunction deviceDeleteBtn() {\n  $(document).on(\"click\", \".deviceDeleteBtn\", function () {\n    id = $(this).attr(\"id\").split(\"-\")[1];\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you will not be able to recover this data!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true\n    }).then(function (willDelete) {\n      if (willDelete) {\n        swal(\"Done! Your data has been deleted\", {\n          icon: \"success\"\n        });\n        axios[\"delete\"](\"/device/\".concat(id, \"/delete\")).then(function (response) {\n          location.reload();\n        });\n      } else {\n        swal(\"Your data is now deleted\", {\n          icon: \"error\"\n        });\n      }\n    });\n  });\n}\n\nfunction multiSelectDevice() {\n  $(document).on(\"click\", \".deviceApplyBtn\", function () {\n    selectedAction = $(\".deviceActionSelect\").val();\n\n    if (selectedAction == null) {\n      swal(\"Please select an action\", {\n        icon: \"error\"\n      });\n    } else if (selectedAction == \"delete\") {\n      selectedDeviceDelete();\n    } else {\n      var data = {\n        ids: deviceIDs,\n        status_id: selectedAction\n      };\n      axios.post(\"device/update-status\", data).then(function (response) {\n        location.reload();\n      });\n    }\n  });\n}\n\nfunction selectedDeviceDelete() {\n  swal({\n    title: \"Are you sure?\",\n    text: \"Once deleted, you will not be able to recover this data!\",\n    icon: \"warning\",\n    buttons: true,\n    dangerMode: true\n  }).then(function (willDelete) {\n    if (willDelete) {\n      swal(\"Done! Your data has been deleted\", {\n        icon: \"success\"\n      });\n      axios.post(\"/device/multi-selected-device/delete\", {\n        ids: deviceIDs\n      }).then(function (response) {\n        location.reload();\n      });\n    } else {\n      swal(\"Your data is now deleted\", {\n        icon: \"error\"\n      });\n    }\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/device/index.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/device/index.js"]();
/******/ 	
/******/ })()
;