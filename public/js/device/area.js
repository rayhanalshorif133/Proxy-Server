/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/device/area.js":
/*!*************************************!*\
  !*** ./resources/js/device/area.js ***!
  \*************************************/
/***/ (() => {

eval("var tr = \"\";\nvar id = \"\";\nvar name = \"\";\nvar thisClick = \"\";\n$(document).ready(function () {\n  editBtn();\n  checkBtn();\n  deleteBtn();\n  multipleDeleteBtn();\n});\n\nfunction editBtn() {\n  $(\".editBtn\").click(function () {\n    tr = $(this).closest(\"tr\");\n    id = tr.attr(\"id\");\n    name = tr.find(\"td:eq(1)\").text();\n    tr.find(\"td:eq(1)\").html('<input type=\"text\" class=\"form-control\" value=\"' + name + '\">');\n    $(this).addClass(\"d-none\");\n    tr.find(\".checkBtn\").removeClass(\"d-none\");\n  });\n}\n\nfunction checkBtn() {\n  $(\".checkBtn\").click(function () {\n    tr = $(this).closest(\"tr\");\n    id = tr.attr(\"id\");\n    thisClick = $(this);\n    name = tr.find(\"td:eq(1) input\").val();\n    var data = {\n      id: id,\n      name: name\n    }; // send back end and update data\n\n    axios.post(\"/device/area/update\", data).then(function (response) {\n      var _response$data = response.data,\n          status = _response$data.status,\n          data = _response$data.data;\n\n      if (status == true) {\n        tr.find(\"td:eq(1)\").html(data.name);\n        tr.find(\"td:eq(2)\").html(data.added_by.name);\n        thisClick.addClass(\"d-none\");\n        tr.find(\".editBtn\").removeClass(\"d-none\");\n        toastr.success(\"Area updated successfully\");\n      } else {\n        toastr.error(\"Area name is already exist\");\n      }\n    });\n  });\n}\n\nfunction deleteBtn() {\n  $(\".deleteBtn\").click(function () {\n    tr = $(this).closest(\"tr\");\n    id = tr.attr(\"id\");\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you will not be able to recover this data!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true\n    }).then(function (willDelete) {\n      if (willDelete) {\n        swal(\"Done! Your data has been deleted\", {\n          icon: \"success\"\n        }); // send back end and update data\n\n        axios[\"delete\"](\"/device/area/\".concat(id, \"/delete\")).then(function (response) {\n          var status = response.data.status;\n\n          if (status == true) {\n            tr.remove();\n            toastr.success(\"Area deleted successfully\");\n          } else {\n            toastr.error(\"Something went wrong\");\n          }\n        });\n      } else {\n        swal(\"Your data is now deleted\", {\n          icon: \"error\"\n        });\n      }\n    });\n  });\n}\n\nfunction multipleDeleteBtn() {\n  $(\".areaApplyBtn\").click(function () {\n    var areaActionSelect = $(\".areaActionSelect\").val();\n\n    if (areaActionSelect == \"delete\") {\n      swal({\n        title: \"Are you sure?\",\n        text: \"Once deleted, you will not be able to recover this data!\",\n        icon: \"warning\",\n        buttons: true,\n        dangerMode: true\n      }).then(function (willDelete) {\n        if (willDelete) {\n          swal(\"Done! Your data has been deleted\", {\n            icon: \"success\"\n          });\n          var ids = [];\n          $(\".areaCheckInput\").each(function () {\n            if ($(this).is(\":checked\")) {\n              ids.push($(this).closest(\"tr\").attr(\"id\"));\n            }\n          }); // send back end and update data\n\n          axios.post(\"/device/area/delete-selected\", {\n            ids: ids\n          }).then(function (response) {\n            var status = response.data.status;\n\n            if (status == true) {\n              toastr.success(\"Area deleted successfully\");\n              location.reload();\n            } else {\n              toastr.error(\"Something went wrong\");\n            }\n          });\n        } else {\n          swal(\"Your data is now deleted\", {\n            icon: \"error\"\n          });\n        }\n      });\n    } else {\n      toastr.warning(\"Please select action\");\n    }\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/device/area.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/device/area.js"]();
/******/ 	
/******/ })()
;