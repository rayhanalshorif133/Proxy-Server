/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/device/main-device.js":
/*!********************************************!*\
  !*** ./resources/js/device/main-device.js ***!
  \********************************************/
/***/ (() => {

eval("var id = \"\";\nvar tr = \"\";\nvar deviceName = \"\";\nvar newDeviceName = \"\";\n$(document).ready(function () {\n  editBtn();\n  checkBtn();\n  deleteBtn();\n  deleteSelectedItems();\n});\n\nfunction deleteSelectedItems() {\n  $(\".mainDeviceApplyBtn\").click(function () {\n    console.log(\"mainDeviceApplyBtn\");\n    var selected = $(\".mainDeviceActionSelect\").val();\n    console.log(selected);\n\n    if (selected == \"delete\") {\n      var selectedIds = [];\n      $(\".mainDeviceCheckbox:checked\").each(function () {\n        selectedIds.push($(this).closest(\"tr\").attr(\"id\"));\n      });\n      console.log(selectedIds);\n\n      if (selectedIds.length > 0) {\n        swal({\n          title: \"Are you sure?\",\n          text: \"Once deleted, you will not be able to recover this data!\",\n          icon: \"warning\",\n          buttons: true,\n          dangerMode: true\n        }).then(function (willDelete) {\n          if (willDelete) {\n            swal(\"Done! Your data has been deleted\", {\n              icon: \"success\"\n            });\n            axios.post(\"/device/main-device/delete-selected\", {\n              ids: selectedIds\n            }).then(function (response) {\n              location.reload();\n            });\n          } else {\n            swal(\"Your data is now deleted\", {\n              icon: \"error\"\n            });\n          }\n        });\n      } else {\n        toastr.warning(\"Please select at least one item\");\n      }\n    }\n  });\n}\n\nfunction deleteBtn() {\n  $(\".deleteMainDeviceBtn\").click(function () {\n    id = $(this).closest(\"tr\").attr(\"id\");\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you will not be able to recover this data!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true\n    }).then(function (willDelete) {\n      if (willDelete) {\n        swal(\"Done! Your data has been deleted\", {\n          icon: \"success\"\n        });\n        axios[\"delete\"](\"/device/main-device/\".concat(id, \"/delete\")).then(function (response) {\n          location.reload();\n        });\n      } else {\n        swal(\"Your data is now deleted\", {\n          icon: \"error\"\n        });\n      }\n    });\n  });\n}\n\nfunction editBtn() {\n  $(\".editMainDeviceBtn\").click(function () {\n    tr = $(this).closest(\"tr\");\n    id = tr.attr(\"id\");\n    toggleBtn(tr);\n    deviceName = tr.find(\".mainDeviceName\").text();\n    tr.find(\".mainDeviceName\").html('<input type=\"text\" class=\"form-control\" value=\"' + deviceName + '\">');\n  });\n}\n\nfunction checkBtn() {\n  $(\".checkMainDeviceBtn\").click(function () {\n    tr = $(this).closest(\"tr\");\n    id = tr.attr(\"id\");\n    newDeviceName = tr.find(\".mainDeviceName input\").val();\n\n    if (newDeviceName) {\n      sendBackedAndUpdatedData();\n    } else {\n      toastr.warning(\"Please enter a valid name\");\n    }\n  });\n}\n\nfunction sendBackedAndUpdatedData() {\n  var data = {\n    id: id,\n    name: newDeviceName\n  };\n  axios.post(\"/device/main-device/update\", data).then(function (response) {\n    var _response$data = response.data,\n        status = _response$data.status,\n        error = _response$data.error,\n        data = _response$data.data;\n\n    if (status == true) {\n      tr.find(\".mainDeviceName\").html(newDeviceName);\n      tr.find(\".mainDeviceAddedBy\").text(data.added_by.name);\n      toastr.success(\"Main Device Updated Successfully\");\n      toggleBtn(tr);\n    } else {\n      toastr.error(\"Main Device name is invalid or not unique\");\n    }\n  });\n}\n\nfunction toggleBtn(tr) {\n  tr.find(\".editMainDeviceBtn\").toggleClass(\"d-none\");\n  tr.find(\".checkMainDeviceBtn\").toggleClass(\"d-none\");\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvZGV2aWNlL21haW4tZGV2aWNlLmpzP2ZmYmIiXSwibmFtZXMiOlsiaWQiLCJ0ciIsImRldmljZU5hbWUiLCJuZXdEZXZpY2VOYW1lIiwiJCIsImRvY3VtZW50IiwicmVhZHkiLCJlZGl0QnRuIiwiY2hlY2tCdG4iLCJkZWxldGVCdG4iLCJkZWxldGVTZWxlY3RlZEl0ZW1zIiwiY2xpY2siLCJjb25zb2xlIiwibG9nIiwic2VsZWN0ZWQiLCJ2YWwiLCJzZWxlY3RlZElkcyIsImVhY2giLCJwdXNoIiwiY2xvc2VzdCIsImF0dHIiLCJsZW5ndGgiLCJzd2FsIiwidGl0bGUiLCJ0ZXh0IiwiaWNvbiIsImJ1dHRvbnMiLCJkYW5nZXJNb2RlIiwidGhlbiIsIndpbGxEZWxldGUiLCJheGlvcyIsInBvc3QiLCJpZHMiLCJyZXNwb25zZSIsImxvY2F0aW9uIiwicmVsb2FkIiwidG9hc3RyIiwid2FybmluZyIsInRvZ2dsZUJ0biIsImZpbmQiLCJodG1sIiwic2VuZEJhY2tlZEFuZFVwZGF0ZWREYXRhIiwiZGF0YSIsIm5hbWUiLCJzdGF0dXMiLCJlcnJvciIsImFkZGVkX2J5Iiwic3VjY2VzcyIsInRvZ2dsZUNsYXNzIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxFQUFFLEdBQUcsRUFBVDtBQUNBLElBQUlDLEVBQUUsR0FBRyxFQUFUO0FBQ0EsSUFBSUMsVUFBVSxHQUFHLEVBQWpCO0FBQ0EsSUFBSUMsYUFBYSxHQUFHLEVBQXBCO0FBQ0FDLENBQUMsQ0FBQ0MsUUFBRCxDQUFELENBQVlDLEtBQVosQ0FBa0IsWUFBWTtBQUMxQkMsRUFBQUEsT0FBTztBQUNQQyxFQUFBQSxRQUFRO0FBQ1JDLEVBQUFBLFNBQVM7QUFDVEMsRUFBQUEsbUJBQW1CO0FBQ3RCLENBTEQ7O0FBT0EsU0FBU0EsbUJBQVQsR0FBK0I7QUFDM0JOLEVBQUFBLENBQUMsQ0FBQyxxQkFBRCxDQUFELENBQXlCTyxLQUF6QixDQUErQixZQUFZO0FBQ3ZD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QyxJQUFBQSxJQUFJLEVBQUV4QztBQUZDLEdBQVg7QUFJQTJCLEVBQUFBLEtBQUssQ0FBQ0MsSUFBTixDQUFXLDRCQUFYLEVBQXlDVyxJQUF6QyxFQUErQ2QsSUFBL0MsQ0FBb0QsVUFBVUssUUFBVixFQUFvQjtBQUNwRSx5QkFBOEJBLFFBQVEsQ0FBQ1MsSUFBdkM7QUFBQSxRQUFNRSxNQUFOLGtCQUFNQSxNQUFOO0FBQUEsUUFBY0MsS0FBZCxrQkFBY0EsS0FBZDtBQUFBLFFBQXFCSCxJQUFyQixrQkFBcUJBLElBQXJCOztBQUNBLFFBQUlFLE1BQU0sSUFBSSxJQUFkLEVBQW9CO0FBQ2hCM0MsTUFBQUEsRUFBRSxDQUFDc0MsSUFBSCxDQUFRLGlCQUFSLEVBQTJCQyxJQUEzQixDQUFnQ3JDLGFBQWhDO0FBQ0FGLE1BQUFBLEVBQUUsQ0FBQ3NDLElBQUgsQ0FBUSxvQkFBUixFQUE4QmYsSUFBOUIsQ0FBbUNrQixJQUFJLENBQUNJLFFBQUwsQ0FBY0gsSUFBakQ7QUFDQVAsTUFBQUEsTUFBTSxDQUFDVyxPQUFQLENBQWUsa0NBQWY7QUFDQVQsTUFBQUEsU0FBUyxDQUFDckMsRUFBRCxDQUFUO0FBQ0gsS0FMRCxNQUtPO0FBQ0htQyxNQUFBQSxNQUFNLENBQUNTLEtBQVAsQ0FBYSwyQ0FBYjtBQUNIO0FBQ0osR0FWRDtBQVdIOztBQUVELFNBQVNQLFNBQVQsQ0FBbUJyQyxFQUFuQixFQUF1QjtBQUNuQkEsRUFBQUEsRUFBRSxDQUFDc0MsSUFBSCxDQUFRLG9CQUFSLEVBQThCUyxXQUE5QixDQUEwQyxRQUExQztBQUNBL0MsRUFBQUEsRUFBRSxDQUFDc0MsSUFBSCxDQUFRLHFCQUFSLEVBQStCUyxXQUEvQixDQUEyQyxRQUEzQztBQUNIIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGlkID0gXCJcIjtcclxudmFyIHRyID0gXCJcIjtcclxudmFyIGRldmljZU5hbWUgPSBcIlwiO1xyXG52YXIgbmV3RGV2aWNlTmFtZSA9IFwiXCI7XHJcbiQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uICgpIHtcclxuICAgIGVkaXRCdG4oKTtcclxuICAgIGNoZWNrQnRuKCk7XHJcbiAgICBkZWxldGVCdG4oKTtcclxuICAgIGRlbGV0ZVNlbGVjdGVkSXRlbXMoKTtcclxufSk7XHJcblxyXG5mdW5jdGlvbiBkZWxldGVTZWxlY3RlZEl0ZW1zKCkge1xyXG4gICAgJChcIi5tYWluRGV2aWNlQXBwbHlCdG5cIikuY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFwibWFpbkRldmljZUFwcGx5QnRuXCIpO1xyXG4gICAgICAgIGxldCBzZWxlY3RlZCA9ICQoXCIubWFpbkRldmljZUFjdGlvblNlbGVjdFwiKS52YWwoKTtcclxuICAgICAgICBjb25zb2xlLmxvZyhzZWxlY3RlZCk7XHJcbiAgICAgICAgaWYgKHNlbGVjdGVkID09IFwiZGVsZXRlXCIpIHtcclxuICAgICAgICAgICAgbGV0IHNlbGVjdGVkSWRzID0gW107XHJcbiAgICAgICAgICAgICQoXCIubWFpbkRldmljZUNoZWNrYm94OmNoZWNrZWRcIikuZWFjaChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICBzZWxlY3RlZElkcy5wdXNoKCQodGhpcykuY2xvc2VzdChcInRyXCIpLmF0dHIoXCJpZFwiKSk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhzZWxlY3RlZElkcyk7XHJcbiAgICAgICAgICAgIGlmIChzZWxlY3RlZElkcy5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgICAgICBzd2FsKHtcclxuICAgICAgICAgICAgICAgICAgICB0aXRsZTogXCJBcmUgeW91IHN1cmU/XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgdGV4dDogXCJPbmNlIGRlbGV0ZWQsIHlvdSB3aWxsIG5vdCBiZSBhYmxlIHRvIHJlY292ZXIgdGhpcyBkYXRhIVwiLFxyXG4gICAgICAgICAgICAgICAgICAgIGljb246IFwid2FybmluZ1wiLFxyXG4gICAgICAgICAgICAgICAgICAgIGJ1dHRvbnM6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgZGFuZ2VyTW9kZTogdHJ1ZSxcclxuICAgICAgICAgICAgICAgIH0pLnRoZW4oKHdpbGxEZWxldGUpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAod2lsbERlbGV0ZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzd2FsKFwiRG9uZSEgWW91ciBkYXRhIGhhcyBiZWVuIGRlbGV0ZWRcIiwge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWNvbjogXCJzdWNjZXNzXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBheGlvc1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLnBvc3QoXCIvZGV2aWNlL21haW4tZGV2aWNlL2RlbGV0ZS1zZWxlY3RlZFwiLCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWRzOiBzZWxlY3RlZElkcyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsb2NhdGlvbi5yZWxvYWQoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHN3YWwoXCJZb3VyIGRhdGEgaXMgbm93IGRlbGV0ZWRcIiwge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWNvbjogXCJlcnJvclwiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRvYXN0ci53YXJuaW5nKFwiUGxlYXNlIHNlbGVjdCBhdCBsZWFzdCBvbmUgaXRlbVwiKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG59XHJcblxyXG5mdW5jdGlvbiBkZWxldGVCdG4oKSB7XHJcbiAgICAkKFwiLmRlbGV0ZU1haW5EZXZpY2VCdG5cIikuY2xpY2soZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGlkID0gJCh0aGlzKS5jbG9zZXN0KFwidHJcIikuYXR0cihcImlkXCIpO1xyXG4gICAgICAgIHN3YWwoe1xyXG4gICAgICAgICAgICB0aXRsZTogXCJBcmUgeW91IHN1cmU/XCIsXHJcbiAgICAgICAgICAgIHRleHQ6IFwiT25jZSBkZWxldGVkLCB5b3Ugd2lsbCBub3QgYmUgYWJsZSB0byByZWNvdmVyIHRoaXMgZGF0YSFcIixcclxuICAgICAgICAgICAgaWNvbjogXCJ3YXJuaW5nXCIsXHJcbiAgICAgICAgICAgIGJ1dHRvbnM6IHRydWUsXHJcbiAgICAgICAgICAgIGRhbmdlck1vZGU6IHRydWUsXHJcbiAgICAgICAgfSkudGhlbigod2lsbERlbGV0ZSkgPT4ge1xyXG4gICAgICAgICAgICBpZiAod2lsbERlbGV0ZSkge1xyXG4gICAgICAgICAgICAgICAgc3dhbChcIkRvbmUhIFlvdXIgZGF0YSBoYXMgYmVlbiBkZWxldGVkXCIsIHtcclxuICAgICAgICAgICAgICAgICAgICBpY29uOiBcInN1Y2Nlc3NcIixcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgYXhpb3NcclxuICAgICAgICAgICAgICAgICAgICAuZGVsZXRlKGAvZGV2aWNlL21haW4tZGV2aWNlLyR7aWR9L2RlbGV0ZWApXHJcbiAgICAgICAgICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxvY2F0aW9uLnJlbG9hZCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgc3dhbChcIllvdXIgZGF0YSBpcyBub3cgZGVsZXRlZFwiLCB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWNvbjogXCJlcnJvclwiLFxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH0pO1xyXG59XHJcbmZ1bmN0aW9uIGVkaXRCdG4oKSB7XHJcbiAgICAkKFwiLmVkaXRNYWluRGV2aWNlQnRuXCIpLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB0ciA9ICQodGhpcykuY2xvc2VzdChcInRyXCIpO1xyXG4gICAgICAgIGlkID0gdHIuYXR0cihcImlkXCIpO1xyXG4gICAgICAgIHRvZ2dsZUJ0bih0cik7XHJcbiAgICAgICAgZGV2aWNlTmFtZSA9IHRyLmZpbmQoXCIubWFpbkRldmljZU5hbWVcIikudGV4dCgpO1xyXG4gICAgICAgIHRyLmZpbmQoXCIubWFpbkRldmljZU5hbWVcIikuaHRtbChcclxuICAgICAgICAgICAgJzxpbnB1dCB0eXBlPVwidGV4dFwiIGNsYXNzPVwiZm9ybS1jb250cm9sXCIgdmFsdWU9XCInICtcclxuICAgICAgICAgICAgICAgIGRldmljZU5hbWUgK1xyXG4gICAgICAgICAgICAgICAgJ1wiPidcclxuICAgICAgICApO1xyXG4gICAgfSk7XHJcbn1cclxuZnVuY3Rpb24gY2hlY2tCdG4oKSB7XHJcbiAgICAkKFwiLmNoZWNrTWFpbkRldmljZUJ0blwiKS5jbGljayhmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdHIgPSAkKHRoaXMpLmNsb3Nlc3QoXCJ0clwiKTtcclxuICAgICAgICBpZCA9IHRyLmF0dHIoXCJpZFwiKTtcclxuICAgICAgICBuZXdEZXZpY2VOYW1lID0gdHIuZmluZChcIi5tYWluRGV2aWNlTmFtZSBpbnB1dFwiKS52YWwoKTtcclxuICAgICAgICBpZiAobmV3RGV2aWNlTmFtZSkge1xyXG4gICAgICAgICAgICBzZW5kQmFja2VkQW5kVXBkYXRlZERhdGEoKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0b2FzdHIud2FybmluZyhcIlBsZWFzZSBlbnRlciBhIHZhbGlkIG5hbWVcIik7XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHNlbmRCYWNrZWRBbmRVcGRhdGVkRGF0YSgpIHtcclxuICAgIGxldCBkYXRhID0ge1xyXG4gICAgICAgIGlkOiBpZCxcclxuICAgICAgICBuYW1lOiBuZXdEZXZpY2VOYW1lLFxyXG4gICAgfTtcclxuICAgIGF4aW9zLnBvc3QoXCIvZGV2aWNlL21haW4tZGV2aWNlL3VwZGF0ZVwiLCBkYXRhKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkge1xyXG4gICAgICAgIGxldCB7IHN0YXR1cywgZXJyb3IsIGRhdGEgfSA9IHJlc3BvbnNlLmRhdGE7XHJcbiAgICAgICAgaWYgKHN0YXR1cyA9PSB0cnVlKSB7XHJcbiAgICAgICAgICAgIHRyLmZpbmQoXCIubWFpbkRldmljZU5hbWVcIikuaHRtbChuZXdEZXZpY2VOYW1lKTtcclxuICAgICAgICAgICAgdHIuZmluZChcIi5tYWluRGV2aWNlQWRkZWRCeVwiKS50ZXh0KGRhdGEuYWRkZWRfYnkubmFtZSk7XHJcbiAgICAgICAgICAgIHRvYXN0ci5zdWNjZXNzKFwiTWFpbiBEZXZpY2UgVXBkYXRlZCBTdWNjZXNzZnVsbHlcIik7XHJcbiAgICAgICAgICAgIHRvZ2dsZUJ0bih0cik7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdG9hc3RyLmVycm9yKFwiTWFpbiBEZXZpY2UgbmFtZSBpcyBpbnZhbGlkIG9yIG5vdCB1bmlxdWVcIik7XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHRvZ2dsZUJ0bih0cikge1xyXG4gICAgdHIuZmluZChcIi5lZGl0TWFpbkRldmljZUJ0blwiKS50b2dnbGVDbGFzcyhcImQtbm9uZVwiKTtcclxuICAgIHRyLmZpbmQoXCIuY2hlY2tNYWluRGV2aWNlQnRuXCIpLnRvZ2dsZUNsYXNzKFwiZC1ub25lXCIpO1xyXG59XHJcbiJdLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvZGV2aWNlL21haW4tZGV2aWNlLmpzLmpzIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/js/device/main-device.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/device/main-device.js"]();
/******/ 	
/******/ })()
;